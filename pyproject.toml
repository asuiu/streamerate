[project]
name = "streamerate"
authors = [{name = "Andrei Suiu", email = "andrei.suiu@gmail.com"}]
dynamic = ["version", "description"]

[tool.poetry]
name = "streamerate"
version = "1.0.4"  # do not edit manually. kept in sync with `tool.commitizen` config via automation
description = "streamerate: a fluent and expressive Python library for chainable iterable processing, inspired by Java 8 streams."
authors = ["Andrei Suiu <andrei.suiu@gmail.com>"]
repository = "https://github.com/asuiu/streamerate"
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.8,<4.0.0"
tqdm = ">=4.62.0"
throttlex = ">=1.0.0"
gevent = ">=21.1.2"


[tool.poetry.dev-dependencies]
pytest = "~7.4.2"
pytest-mock = "~3.11.1"
invoke = "~2.0"
black = ">=22.12"
pycodestyle = "~2.10"
pydocstyle = "~6.3"
pylint = ">=2.17.5"
termcolor = "~2.2.0"
commitizen = "~2.42.1"
tomlkit = "~0.11.6"
pytest-only = "~=2.0.0"
coverage = { extras = ["toml"], version = "~7.2.1" }
pytest-cov = "~4.0.0"
prospector = ">=1.10.2"
pre-commit = ">=2.21.0"
twine = ">=4.0.2"

[tool.poetry.scripts]
test = "tasks:test"
reformat = "tasks:reformat"
lint = "tasks:lint"
typecheck = "tasks:typecheck"
verify-all = "tasks:verify_all"
find-releasable-changes = "tasks:find_releasable_changes"
prepare-release = "tasks:prepare_release"
debug-auto-git-tag = "tasks:debug_auto_git_tag"

[tool.black]
line-length = 160
include = '\.pyi?$'
default_language_version = '3.8'

[tool.pylint.master]
#ignore="tests,test_integrations"
ignore-patterns = ["test_.*"]
load-plugins = ["pylint.extensions.no_self_use"]

[tool.pylint.messages_control]
max-line-length = 160
disable = ["import-error",
    "missing-module-docstring",
    "missing-class-docstring",
    "invalid-name",
    "no-name-in-module",
    "missing-function-docstring",
    "too-few-public-methods",
    "too-many-instance-attributes",
    "logging-fstring-interpolation"]
output-format = "colorized"
max-locals = 25
max-args = 10
enable = "useless-suppression"

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = ["E501"]


# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []


[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.4"  # do not edit manually. kept in sync with `tool.poetry` config via automation
tag_format = "v$version"

# Same as Black.
line-length = 160

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:"
]

[build-system]
requires = ["poetry>=1.3"]
build-backend = "poetry.masonry.api"
